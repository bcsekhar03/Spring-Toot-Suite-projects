package com.sekhar.rest;

import java.time.Duration;
import java.util.Date;
import java.util.stream.Stream;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import com.sekhar.customerEvent;

import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;
import reactor.util.function.Tuple2;

@RestController
public class CustomerController {

	@GetMapping(value="/event", produces="application/json")
	public ResponseEntity<Mono<customerEvent>> getEvent(){
		customerEvent event=new customerEvent("Chandra", new Date());
		Mono<customerEvent> customer=Mono.just(event);
		return new ResponseEntity<Mono<customerEvent>>(customer,HttpStatus.OK);
	}
	
	public ResponseEntity<Flux<customerEvent>> getEvents(){
		//creating binding object with data
		customerEvent event=new customerEvent("Sekhar",new Date());
		//creating stream for binding object
		Stream<customerEvent> customer=Stream.generate(()->event);
		//creating flux object using stream
		Flux<customerEvent> cflux=Flux.fromStream(customer);
		//setting response interval
		Flux<Long> interval=Flux.interval(Duration.ofSeconds(5));
		//combine interval flux and customer event flux
		Flux <Tuple2<Long,customerEvent>> zip=Flux.zip(interval, cflux);
		//Getting tuple value as T2
		Flux<customerEvent> fluxmap=zip.map(Tuple2::get2);
		return new ResponseEntity<>(fluxmap, HttpStatus.OK);
	}
}
